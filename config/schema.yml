propel:
  _attributes: { package: plugins.opOpenSocialPlugin.lib.model }

  application:
    id: ~
    url: { type: varchar(128), required: true }
    height:    { type: integer, required: true }
    scrolling: { type: integer, required: true }
    singleton: { type: integer, required: true, default: true } 
    updated_at: ~

  application_i18n:
    title:       { type: varchar(128) }
    title_url:   { type: varchar(128) }
    description: { type: longvarchar }
    directory_title : { type: varchar(128) }
    screenshot:  { type: varchar(128) }
    thumbnail :  { type: varchar(128) }
    author:      { type: varchar(128) }
    author_aboutme: { type: longvarchar }
    author_affiliation : { type: varchar(128) }
    author_email:  { type: varchar(128) }
    author_photo:  { type: varchar(128) }
    author_link:   { type: varchar(128) }
    author_quote:  { type: longvarchar }
    settings: { type: longvarchar }
    views: { type: longvarchar }
    version: { type: varchar(64), required: true }

  member_application:
    id: ~
    member_id: { type: integer, foreignTable: member, foreignReference: id, onDelete: cascade }
    application_id: { type: integer, foreignTable: application, foreignReference: id, onDelete: cascade }
    is_disp_other: { type: boolean, required: true }
    is_disp_home: { type: boolean, required: true }
    is_home_widget: { type: boolean, required: true } 
    sort_order: { type: integer }
  
  application_setting:
    id: ~
    member_application_id: { type: integer, foreignTable: member_application, foreignReference: id, onDelete: cascade }
    name: { type: varchar(128), required: true }
    value: { type: varchar(255), required: true }

  application_persistent_data:
    id: ~
    member_application_id: { type: integer, foreignTable: member_application, foreignReference: id, onDelete: cascade }
    key: { type: varchar(128), required: true }
    value: { type : longvarchar, required: true }

  opensocial_person_field:
    profile_id: { type: integer, primaryKey: true, foreignTable: profile, foreignReference: id, onDelete: cascade }
    field_name: { type: varchar(128), index: unique }
